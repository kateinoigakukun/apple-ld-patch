--- ld64/src/ld/Options.cpp	2019-04-10 08:33:08.000000000 +0900
+++ ld64/src/ld/Options.cpp	2019-11-27 19:34:29.000000000 +0900
@@ -21,7 +21,9 @@
  *
  * @APPLE_LICENSE_HEADER_END@
  */
-
+#ifndef CPU_SUBTYPE_ARM64_E
+#define CPU_SUBTYPE_ARM64_E 2
+#endif
 
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -62,18 +64,6 @@
 // magic to place command line in crash reports
 const int crashreporterBufferSize = 2000;
 static char crashreporterBuffer[crashreporterBufferSize];
-#if __MAC_OS_X_VERSION_MIN_REQUIRED >= 1070
-	#include <CrashReporterClient.h>
-	// hack until ld does not need to build on 10.6 anymore
-    struct crashreporter_annotations_t gCRAnnotations 
-        __attribute__((section("__DATA," CRASHREPORTER_ANNOTATIONS_SECTION))) 
-        = { CRASHREPORTER_ANNOTATIONS_VERSION, 0, 0, 0, 0, 0, 0 };
-#else
-	extern "C" char* __crashreporter_info__;
-	__attribute__((used)) 
-	char* __crashreporter_info__ = crashreporterBuffer;
-#endif
-
 
 static bool			sEmitWarnings = true;
 static bool			sFatalWarnings = false;
@@ -5122,7 +5112,7 @@
 			case Options::kStaticExecutable:
 			case Options::kKextBundle:
 				// <rdar://problem/14676611> 16KB segments for arm64 kexts
-				if ( (fArchitecture == CPU_TYPE_ARM64)
+				if ( fArchitecture == CPU_TYPE_ARM64
 					) {
 					fSegmentAlignment = 4096*4;
 				}
@@ -5887,10 +5877,6 @@
 	bool creatingMachKernel = false;
 	bool newLinker = false;
 	
-	// build command line buffer in case ld crashes
-#if __MAC_OS_X_VERSION_MIN_REQUIRED >= 1070
-	CRSetCrashLogMessage(crashreporterBuffer);
-#endif
 	const char* srcRoot = getenv("SRCROOT");
 	if ( srcRoot != NULL ) {
 		strlcpy(crashreporterBuffer, "SRCROOT=", crashreporterBufferSize);
